// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RefactoringExample.UiTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// StartApplication - Use 'StartApplicationParams' to pass parameters into this method.
        /// </summary>
        public void StartApplication()
        {

            // Launch '%USERPROFILE%\Documents\GitHub\RefactoringExample\RefactoringExample\RefactoringExample\bin\Debug\RefactoringExample.exe'
            ApplicationUnderTest refactoringExampleApplication = ApplicationUnderTest.Launch(this.StartApplicationParams.ExePath, this.StartApplicationParams.AlternateExePath);
        }
        
        /// <summary>
        /// EnterFirstName - Use 'EnterFirstNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterFirstName()
        {
            #region Variable Declarations
            WpfEdit uIFirstNameTextBoxEdit = this.UIMainWindowWindow.UIFirstNameTextBoxEdit;
            #endregion

            // Type 'Firstname' in 'FirstNameTextBox' text box
            uIFirstNameTextBoxEdit.Text = this.EnterFirstNameParams.UIFirstNameTextBoxEditText;
        }
        
        /// <summary>
        /// EnterLastName - Use 'EnterLastNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterLastName()
        {
            #region Variable Declarations
            WpfEdit uILastNameTextBoxEdit = this.UIMainWindowWindow.UILastNameTextBoxEdit;
            #endregion

            // Type 'Lastname' in 'LastNameTextBox' text box
            uILastNameTextBoxEdit.Text = this.EnterLastNameParams.UILastNameTextBoxEditText;
        }
        
        /// <summary>
        /// EnterBirthdate - Use 'EnterBirthdateParams' to pass parameters into this method.
        /// </summary>
        public void EnterBirthdate()
        {
            #region Variable Declarations
            WpfEdit uIBirthDateTextBoxEdit = this.UIMainWindowWindow.UIBirthDateTextBoxEdit;
            #endregion

            // Type '1.1.0001' in 'BirthDateTextBox' text box
            uIBirthDateTextBoxEdit.Text = this.EnterBirthdateParams.UIBirthDateTextBoxEditText;
        }
        
        /// <summary>
        /// Save
        /// </summary>
        public void Save()
        {
            #region Variable Declarations
            WpfButton uISaveButton = this.UIMainWindowWindow.UISaveButton;
            #endregion

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(88, 20));
        }
        
        /// <summary>
        /// CloseApplication
        /// </summary>
        public void CloseApplication()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(39, 9));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WpfListItem uIHansPeterListItem = this.UIMainWindowWindow.UIListBoxList.UIHansPeterListItem;
            #endregion

            // Verify that the 'DisplayText' property of 'Hans Peter' list item equals 'Hans Peter'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIHansPeterListItemDisplayText, uIHansPeterListItem.DisplayText);
        }
        
        #region Properties
        public virtual StartApplicationParams StartApplicationParams
        {
            get
            {
                if ((this.mStartApplicationParams == null))
                {
                    this.mStartApplicationParams = new StartApplicationParams();
                }
                return this.mStartApplicationParams;
            }
        }
        
        public virtual EnterFirstNameParams EnterFirstNameParams
        {
            get
            {
                if ((this.mEnterFirstNameParams == null))
                {
                    this.mEnterFirstNameParams = new EnterFirstNameParams();
                }
                return this.mEnterFirstNameParams;
            }
        }
        
        public virtual EnterLastNameParams EnterLastNameParams
        {
            get
            {
                if ((this.mEnterLastNameParams == null))
                {
                    this.mEnterLastNameParams = new EnterLastNameParams();
                }
                return this.mEnterLastNameParams;
            }
        }
        
        public virtual EnterBirthdateParams EnterBirthdateParams
        {
            get
            {
                if ((this.mEnterBirthdateParams == null))
                {
                    this.mEnterBirthdateParams = new EnterBirthdateParams();
                }
                return this.mEnterBirthdateParams;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private StartApplicationParams mStartApplicationParams;
        
        private EnterFirstNameParams mEnterFirstNameParams;
        
        private EnterLastNameParams mEnterLastNameParams;
        
        private EnterBirthdateParams mEnterBirthdateParams;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'StartApplication'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StartApplicationParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\GitHub\RefactoringExample\RefactoringExample\RefactoringExample\bin\Debug\RefactoringExample.exe'
        /// </summary>
        public string ExePath = @"C:\Users\hendrik.loesch\RefactoringExample\RefactoringExample\RefactoringExample\bin\Debug\RefactoringExample.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\GitHub\RefactoringExample\RefactoringExample\RefactoringExample\bin\Debug\RefactoringExample.exe'
        /// </summary>
        public string AlternateExePath = "%USERPROFILE%\\Documents\\GitHub\\RefactoringExample\\RefactoringExample\\RefactoringE" +
            "xample\\bin\\Debug\\RefactoringExample.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterFirstName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterFirstNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Firstname' in 'FirstNameTextBox' text box
        /// </summary>
        public string UIFirstNameTextBoxEditText = "Firstname";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterLastName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterLastNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Lastname' in 'LastNameTextBox' text box
        /// </summary>
        public string UILastNameTextBoxEditText = "Lastname";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterBirthdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterBirthdateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1.1.0001' in 'BirthDateTextBox' text box
        /// </summary>
        public string UIBirthDateTextBoxEditText = "1.1.0001";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Hans Peter' list item equals 'Hans Peter'
        /// </summary>
        public string UIHansPeterListItemDisplayText = "Hans Peter";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIFirstNameTextBoxEdit
        {
            get
            {
                if ((this.mUIFirstNameTextBoxEdit == null))
                {
                    this.mUIFirstNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFirstNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "FirstNameTextBox";
                    this.mUIFirstNameTextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIFirstNameTextBoxEdit;
            }
        }
        
        public WpfEdit UILastNameTextBoxEdit
        {
            get
            {
                if ((this.mUILastNameTextBoxEdit == null))
                {
                    this.mUILastNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUILastNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "LastNameTextBox";
                    this.mUILastNameTextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILastNameTextBoxEdit;
            }
        }
        
        public WpfEdit UIBirthDateTextBoxEdit
        {
            get
            {
                if ((this.mUIBirthDateTextBoxEdit == null))
                {
                    this.mUIBirthDateTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIBirthDateTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "BirthDateTextBox";
                    this.mUIBirthDateTextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBirthDateTextBoxEdit;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public UIListBoxList UIListBoxList
        {
            get
            {
                if ((this.mUIListBoxList == null))
                {
                    this.mUIListBoxList = new UIListBoxList(this);
                }
                return this.mUIListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIFirstNameTextBoxEdit;
        
        private WpfEdit mUILastNameTextBoxEdit;
        
        private WpfEdit mUIBirthDateTextBoxEdit;
        
        private WpfButton mUISaveButton;
        
        private UIListBoxList mUIListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIListBoxList : WpfList
    {
        
        public UIListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "ListBox";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIHendrikLöschListItem
        {
            get
            {
                if ((this.mUIHendrikLöschListItem == null))
                {
                    this.mUIHendrikLöschListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIHendrikLöschListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Hendrik Lösch";
                    this.mUIHendrikLöschListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIHendrikLöschListItem;
            }
        }
        
        public WpfListItem UIHansPeterListItem
        {
            get
            {
                if ((this.mUIHansPeterListItem == null))
                {
                    this.mUIHansPeterListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIHansPeterListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Hans Peter";
                    this.mUIHansPeterListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIHansPeterListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIHendrikLöschListItem;
        
        private WpfListItem mUIHansPeterListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UISchließenButton
        {
            get
            {
                if ((this.mUISchließenButton == null))
                {
                    this.mUISchließenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISchließenButton.SearchProperties[WinButton.PropertyNames.Name] = "Schließen";
                    this.mUISchließenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISchließenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISchließenButton;
        #endregion
    }
}
